EXPECTED_COOJA_VERSION = 2023090701

ifndef CONTIKI
  $(error CONTIKI not defined!)
endif

# Detect incompatible Cooja versions when not performing "make clean".
ifneq ($(MAKECMDGOALS),clean)
  ifndef COOJA_CI
    # If LIBNAME is set, build is done under Cooja.
    ifdef LIBNAME
      ifneq ($(COOJA_VERSION),$(EXPECTED_COOJA_VERSION))
        $(error Got COOJA_VERSION $(COOJA_VERSION) but expected $(EXPECTED_COOJA_VERSION))
      endif
    endif
  endif

  ifneq ($(BOARD),)
    $(error Cooja motes do not support boards, please remove the configuration 'BOARD=$(BOARD)')
  endif
endif

WRAPPED_FUNS = printf putchar puts

CC = gcc

CFLAGS += -pthread

ifeq ($(HOST_OS),Darwin)
  CFLAGS += -fno-common -DHAVE_SNPRINTF
  LDFLAGS_WERROR = -Wl,-fatal_warnings
  LDFLAGS += -dynamiclib -fno-common
else
  CFLAGS += -fPIC
  LDFLAGS += -shared -pthread -Wl,-zdefs
  LDFLAGS += -Wl,--warn-common
  LDFLAGS += -Wl,-T$(CONTIKI_NG_RELOC_PLATFORM_DIR)/cooja/cooja.ld
  # Use the printf-family replacement functions in cooja-log.c.
  LDFLAGS += $(addprefix -Wl$(COMMA)--wrap$(COMMA), $(WRAPPED_FUNS))
endif

LD = $(CC)
SIZE = size
# All .csc files contain calls to make with targets that are not the ones
# Cooja need. Just disable the final copy so Cooja can share the build
# system with the rest of Contiki-NG.
CP = true

# No stack end symbol available, code does not work on 64-bit architectures.
MODULES_SOURCES_EXCLUDES += stack-check.c
# No Serial Peripheral Interface in Cooja.
MODULES_SOURCES_EXCLUDES += spi.c

### COOJA platform sources
CONTIKI_TARGET_DIRS = . dev sys cfs

# (COOJA_SOURCEDIRS contains additional sources dirs set from simulator)
vpath %.c $(COOJA_SOURCEDIRS)

COOJA_BASE	= cooja_mt.c rtimer-arch.c watchdog.c int-master.c

COOJA_INTFS	= clock.c moteid.c cooja-log.c

ifneq ($(COOJA_BEEP),0)
  COOJA_INTFS += beep.c
endif

ifneq ($(COOJA_CFS),0)
  COOJA_INTFS += cfs-cooja.c
endif

ifeq ($(COOJA_EEPROM),0)
  $(OBJECTDIR)/platform.o: CFLAGS += -DNO_EEPROM
else
  COOJA_INTFS += eeprom.c
endif

ifneq ($(COOJA_IP),0)
  COOJA_INTFS += ip.c
endif

ifeq ($(COOJA_LEDS),0)
  CONTIKI_SOURCES_EXCLUDES += leds.c
  $(OBJECTDIR)/platform.o: CFLAGS += -DNO_LEDS
else
  COOJA_INTFS += leds-arch.c
endif

# FIXME: iq-seeder requires radio for entropy.
ifeq ($(COOJA_RADIO),0)
  CONTIKI_SOURCES_EXCLUDES += iq-seeder.c
else
  COOJA_INTFS += cooja-radio.c
endif

ifeq ($(COOJA_SERIAL),0)
  CONTIKI_SOURCES_EXCLUDES += slip.c
else
  COOJA_INTFS += rs232.c slip-arch.c
endif

ifeq ($(COOJA_PIR_SENSOR),0)
  $(OBJECTDIR)/platform.o: CFLAGS += -DNO_PIR_SENSOR
else
  COOJA_INTFS += pir-sensor.c
endif

ifeq ($(COOJA_VIB_SENSOR),0)
  $(OBJECTDIR)/platform.o: CFLAGS += -DNO_VIB_SENSOR
else
  COOJA_INTFS += vib-sensor.c
endif

COOJA_CORE = platform.c mtype.c gpio-hal-arch.c

# Do not include sensors.c when compiling without sensors.
ifeq ($(filter %-sensor.c,$(COOJA_INTFS)),)
  CONTIKI_SOURCES_EXCLUDES += sensors.c
endif

ifeq ($(COOJA_BUTTONS),0)
  CONTIKI_SOURCES_EXCLUDES += button-hal.c
  $(OBJECTDIR)/platform.o: CFLAGS += -DNO_BUTTONS
else
  COOJA_CORE += buttons.c
endif

# (COOJA_SOURCEFILES contains additional sources set from simulator)
CONTIKI_TARGET_SOURCEFILES = \
$(COOJA_BASE) $(COOJA_INTFS) $(COOJA_CORE) $(COOJA_NET) $(COOJA_SOURCEFILES)

CONTIKI_SOURCEFILES += $(CONTIKI_TARGET_SOURCEFILES)

### Compiler arguments
CFLAGSNO = $(EXTRA_CC_ARGS) -Wall
ifeq ($(WERROR),1)
CFLAGSNO += -Werror
endif
CFLAGS   += $(CFLAGSNO)
